@page "/test"
@using Blazored.Toast.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Blazored.LocalStorage
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject ILocalStorageService LocalStorage

<p>@message</p>

@code {
    private string message = "Loading...";

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        if (!user.Identity.IsAuthenticated)
        {
            ToastService.ShowError("You are not authorized to view this page.");
            NavigationManager.NavigateTo("/login");
            return;
        }

        try
        {
            // Retrieve the JWT token from local storage
            var token = await LocalStorage.GetItemAsStringAsync("authToken");
            if (string.IsNullOrEmpty(token))
            {
                ToastService.ShowError("Token not found. Please login again.");
                NavigationManager.NavigateTo("/login");
                return;
            }

            // Create the HTTP request and add the Authorization header
            var request = new HttpRequestMessage(HttpMethod.Get, "api/test");
            request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);

            // Send the request
            var response = await Http.SendAsync(request);
            if (response.IsSuccessStatusCode)
            {
                message = await response.Content.ReadAsStringAsync();
            }
            else
            {
                message = $"Error: {response.StatusCode}";
                ToastService.ShowError($"API access error: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            message = $"Exception occurred: {ex.Message}";
            ToastService.ShowError($"An error occurred: {ex.Message}");
        }
    }
}
